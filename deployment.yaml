apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: db
    spec:
      containers:
      - image: anguda/mysql
        imagePullPolicy: ""
        name: db
        ports:
        - containerPort: 3306
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
spec:
  ports:
  - name: "3306"
    port: 3306
    targetPort: 3306
  selector:
    io.kompose.service: db
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  name: pythonapp
  labels:
    app: pythonapp
spec:
  ports:
  - port: 5000
    name: http
  selector:
    app: pythonapp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pythonapp-v1
  labels:
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pythonapp
      version: v1
  template:
    metadata:
      labels:
        app: pythonapp
        version: v1
    spec:
      containers:
      - name: pythonapp
        image: anguda/python-flask-app:web
        env:
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        resources:
          requests:
            cpu: "100m"
        imagePullPolicy: IfNotPresent #Always
        ports:
        - containerPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pythonapp-v2
  labels:
    version: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pythonapp
      version: v2
  template:
    metadata:
      labels:
        app: pythonapp
        version: v2
    spec:
      containers:
      - name: pythonapp
        image: anguda/python-flask-app:istio-example
        env:
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        resources:
          requests:
            cpu: "100m"
        imagePullPolicy: IfNotPresent #Always
        ports:
        - containerPort: 5000
